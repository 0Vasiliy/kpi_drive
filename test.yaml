version: '3.8'

services:
  # Веб-сервер Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx-web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./html:/usr/share/nginx/html
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php
      - backend1
    networks:
      - app-network
    restart: unless-stopped

  # PHP-FPM сервер
  php:
    image: php:8.2-fpm-alpine
    container_name: php-fpm
    volumes:
      - ./php:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    environment:
      - PHP_FPM_LISTEN=9000
    networks:
      - app-network
    restart: unless-stopped

  # База данных MariaDB
  mariadb:
    image: mariadb:10.11
    container_name: mariadb-db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=app_db
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=userpassword
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped

  # Backend сервис (Node.js/Python/Java)
  backend1:
    image: node:18-alpine
    container_name: backend-service
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm start"
    environment:
      - NODE_ENV=production
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_NAME=app_db
      - DB_USER=app_user
      - DB_PASS=userpassword
    depends_on:
      - mariadb
    networks:
      - app-network
    restart: unless-stopped

# Создаем bridge network для изоляции сервисов
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16